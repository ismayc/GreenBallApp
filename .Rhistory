shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages('ggplot2')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x = rnorm(1000);
# overlay histogram, empirical density and normal density
p0 = qplot(x, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
opts(legend.position = c(0.85, 0.85))
p0
p0 = qplot(x, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue'))
#opts(legend.position = c(0.85, 0.85))
p0
x = rnorm(1000);
# overlay histogram, empirical density and normal density
p0 = qplot(x, geom = 'blank') +
#geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) #+
#scale_colour_manual(name = 'Density', values = c('red', 'blue'))
#opts(legend.position = c(0.85, 0.85))
p0
x = 1:1000;
# overlay histogram, empirical density and normal density
p0 = qplot(x, geom = 'blank') +
#geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) #+
#scale_colour_manual(name = 'Density', values = c('red', 'blue'))
#opts(legend.position = c(0.85, 0.85))
p0
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
corTempMin <- cor(TempMin ~ Year_Week, data=subset(Clim_Week, Week >= 37 & Week <= 41)); corTempMin
PeakClimWeek <- subset(Clim_Week, Week >= 37 & Week <= 41)
Clim_Week <- read.csv("/shared/ismayc@ripon.edu/BirdMigration/ClimateByYear_Week.csv")
PeakClimWeek <- subset(Clim_Week, Week >= 37 & Week <= 41)
corTempMin <- cor(TempMin ~ Year_Week, data=PeakClimWeek); corTempMin
library(mosaic) #For permutation tests (nonparametric inference)
install.packages("mosaic")
